name: Generate Directory Listing

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags
  workflow_dispatch:  # Manual trigger option

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create releases directory
        run: mkdir -p releases

      - name: Fetch all releases and download assets
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Listing all releases..."
          gh release list --repo ${{ github.repository }} --limit 100
          
          echo "Creating directory structure..."
          mkdir -p releases/{linux,mac,windows}/{jdk8,jdk11,jdk17,jdk21}
          
          echo "Fetching release details..."
          releases=$(gh release list --repo ${{ github.repository }} --limit 100 --json tagName --jq '.[].tagName')
          
          for tag in $releases; do
            echo "Processing release $tag..."
            
            # Create temporary directory for this release
            mkdir -p "temp-$tag"
            
            echo "Downloading assets from release $tag..."
            gh release download "$tag" --dir "temp-$tag" --repo ${{ github.repository }} || echo "No assets found for $tag"
            
            # Move files to appropriate directories based on filename patterns
            for file in temp-$tag/*; do
              if [ -f "$file" ]; then
                filename=$(basename "$file")
                echo "Processing file: $filename"
                
                # Determine OS and JDK version from filename
                if [[ "$filename" =~ linux ]]; then
                  os="linux"
                elif [[ "$filename" =~ mac ]] || [[ "$filename" =~ darwin ]]; then
                  os="mac"
                elif [[ "$filename" =~ windows ]] || [[ "$filename" =~ win ]]; then
                  os="windows"
                else
                  os="linux"  # default
                fi
                
                if [[ "$filename" =~ jdk8 ]] || [[ "$filename" =~ jdk-8 ]]; then
                  jdk="jdk8"
                elif [[ "$filename" =~ jdk11 ]] || [[ "$filename" =~ jdk-11 ]]; then
                  jdk="jdk11"
                elif [[ "$filename" =~ jdk17 ]] || [[ "$filename" =~ jdk-17 ]]; then
                  jdk="jdk17"
                elif [[ "$filename" =~ jdk21 ]] || [[ "$filename" =~ jdk-21 ]]; then
                  jdk="jdk21"
                else
                  jdk="jdk17"  # default
                fi
                
                echo "Moving $filename to releases/$os/$jdk/"
                cp "$file" "releases/$os/$jdk/"
              fi
            done
            
            # Clean up temp directory
            rm -rf "temp-$tag"
          done
          
          echo "Final directory structure:"
          find releases/ -type f -exec ls -la {} \;
          
          # Remove any artifact.tar files that might have been downloaded
          find releases/ -name "artifact.tar" -delete
          find releases/ -name "*.tar" -delete

      - name: Generate Directory Listings
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          FOLDER: 'releases'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'releases'

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
